// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id           String   @id @default(cuid())
  name         String?
  email        String?  @unique
  password     String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  metasCriadas Meta[]   @relation("UsuarioCriador") // Relacionamento com metas criadas
  metas        Meta[]   @relation("Participantes") // Relacionamento com metas como participante
}

model Meta {
  id               String      @id @default(cuid())
  titulo           String
  descricao        String?
  categoria        String
  valorTotal       Float
  valorParcela     Float
  numParcelas      Int
  recorrente       Boolean
  frequencia       Frequencia? // Enum para frequência
  diaVencimento    Int?
  diaSemana        String?
  horario          String?
  dataInicio       DateTime
  dataFim          DateTime?
  numExecucoes     Int?
  usuarioCriadorId String
  usuarioCriador   User        @relation("UsuarioCriador", fields: [usuarioCriadorId], references: [id])
  participantes    User[]      @relation("Participantes")
  dataCriacao      DateTime    @default(now())
  parcelas         Parcela[] // Relacionamento com as parcelas
}

model Parcela {
  id             String      @id @default(cuid())
  metaId         String
  numero         Int
  valor          Float
  dataVencimento DateTime
  status         Status // Enum para status
  valorPago      Float?
  responsavel    Responsavel // Enum para responsável
  dataPagamento  DateTime?

  // Relacionamento com Meta
  meta Meta @relation(fields: [metaId], references: [id])
}

// Enum para frequência
enum Frequencia {
  diaria
  semanal
  mensal
}

// Enum para status da parcela
enum Status {
  Pendente
  Paga
}

// Enum para responsável pela parcela
enum Responsavel {
  usuario1
  usuario2
  ambos
}
